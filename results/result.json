{
    "schema": "```yaml\nopenapi: 3.0.0\ninfo:\n  title: Shipping Services API\n  version: 1.0.0\npaths: {}\ncomponents:\n  schemas:\n\n    Headers:\n      type: object\n      properties:\n        Transfer-Encoding:\n          type: string\n          example: chunked\n        Content-Type:\n          type: string\n          example: application/json; charset=utf-8\n        Content-Encoding:\n          type: string\n          example: gzip\n        Vary:\n          type: string\n          example: Accept-Encoding\n        AccessToken:\n          type: string\n          format: uuid\n          example: c1e39827-9683-4a6e-abea-97ad6df2ff2e\n        api-supported-versions:\n          type: string\n          example: 2.0,3.0,4.0\n        api-deprecated-versions:\n          type: string\n          example: 1.0\n        X-Correlation-Id:\n          type: string\n          format: uuid\n          example: 5ef51979-c01f-4171-8630-596c9f47343a\n        Strict-Transport-Security:\n          type: string\n          example: max-age=31536000; includeSubDomains\n        Referrer-Policy:\n          type: string\n          example: no-referrer\n        X-Content-Type-Options:\n          type: string\n          example: nosniff\n        X-Frame-Options:\n          type: string\n          example: SAMEORIGIN\n        X-XSS-Protection:\n          type: string\n          example: 1; mode=block\n        Date:\n          type: string\n          format: date-time\n          example: Fri, 04 Jul 2025 17:04:44 GMT\n\n    ShippingServices:\n      type: object\n      properties:\n        status_code:\n          type: integer\n          example: 200\n        headers:\n          $ref: '#/components/schemas/Headers'\n        body:\n          type: object\n          properties:\n            shippingServices:\n              type: array\n              items:\n                $ref: '#/components/schemas/ShippingService'\n            weightBands:\n              type: array\n              items:\n                $ref: '#/components/schemas/WeightBand'\n\n    ShippingService:\n      type: object\n      properties:\n        brandType:\n          type: string\n          example: RoyalMail\n        shippingServiceIdentifier:\n          type: string\n          example: TOLP24\n        shippingServiceDisplayName:\n          type: string\n          example: Tracked 24\n        countryIso3Code:\n          type: string\n          example: GBR\n        minWeightInGrams:\n          type: integer\n          example: 751\n        maxWeightInGrams:\n          type: integer\n          example: 1000\n        isEligibleForCollection:\n          type: boolean\n          example: true\n        isEligibleForCollectionSafePlace:\n          type: boolean\n          example: true\n        isEligibleForDeliverySafePlace:\n          type: boolean\n          example: true\n        isEligibleForLabellessCollections:\n          type: boolean\n          example: true\n        isEligibleForLabelsToGo:\n          type: boolean\n          example: true\n        packageFormats:\n          type: array\n          items:\n            $ref: '#/components/schemas/PackageFormat'\n        enhancements:\n          type: array\n          items:\n            type: string\n            example: Tracked\n        serviceLevel:\n          type: string\n          example: _24\n        dropOffLocations:\n          type: object\n          properties:\n            postBox:\n              type: boolean\n              example: true\n            parcelBox:\n              type: boolean\n              example: true\n            postOffice:\n              type: boolean\n              example: true\n            deliveryOffice:\n              type: boolean\n              example: true\n            parcelshop:\n              type: boolean\n              example: true\n        standardCollectionPrice:\n          type: number\n          format: float\n          example: 0.0\n\n    PackageFormat:\n      type: object\n      properties:\n        packageFormatIdentifier:\n          type: string\n          example: MediumParcel\n        packageFormatDisplayName:\n          type: string\n          example: Medium Parcel\n        maxDimensions:\n          type: object\n          properties:\n            widthInMm:\n              type: integer\n              example: 460\n            heightInMm:\n              type: integer\n              example: 610\n            depthInMm:\n              type: integer\n              example: 460\n        costs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Cost'\n        dropOffOptions:\n          type: object\n          properties:\n            postOffice:\n              $ref: '#/components/schemas/DropOffOption'\n            parcelshop:\n              $ref: '#/components/schemas/DropOffOption'\n\n    Cost:\n      type: object\n      properties:\n        compensationAmount:\n          type: number\n          format: float\n          example: 150.0\n        cost:\n          type: number\n          format: float\n          example: 4.79\n        vatCost:\n          type: number\n          format: float\n          example: 0.0\n        dropOffLocations:\n          type: object\n          properties:\n            labelsToGo:\n              type: boolean\n              example: true\n\n    DropOffOption:\n      type: object\n      properties:\n        supplementCharges:\n          type: array\n          items:\n            $ref: '#/components/schemas/SupplementCharge'\n\n    SupplementCharge:\n      type: object\n      properties:\n        supplementType:\n          type: string\n          example: DropCharge\n        cost:\n          type: number\n          format: float\n          example: 0.1667\n        vatCost:\n          type: number\n          format: float\n          example: 0.0333\n\n    WeightBand:\n      type: object\n      properties:\n        packageFormat:\n          type: string\n          example: LargeLetter\n        weightBands:\n          type: array\n          items:\n            $ref: '#/components/schemas/WeightRange'\n\n    WeightRange:\n      type: object\n      properties:\n        maxWeightinGrams:\n          type: integer\n          example: 100\n        minCost:\n          type: number\n          format: float\n          example: 2.14\n```",
    "auth": "1. Authentication scheme: The authentication scheme used here seems to be API Key authentication. The key is sent through the header \"X-Partner-Token\".\n\n2. Authentication flow: The flow in API Key authentication is straightforward. The client sends a request to the server with an API key. The server then validates this key and if it is valid, the server processes the request.\n\n3. Required credentials: The required credential here is the API Key, which is sent in the request header as \"X-Partner-Token\".\n\n4. Security scopes: The security scope isn't explicitly mentioned in the request, but it's likely restricted to operations that the partner's API key is allowed to perform.\n\nOpenAPI security scheme definition:\n\n```yaml\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:        # arbitrary name for the security scheme\n      type: apiKey\n      in: header       # can be 'header', 'query' or 'cookie'\n      name: X-Partner-Token\nsecurity:\n  - ApiKeyAuth: []\n```\nThis definition states that the API uses a security scheme that expects an API key in the header with the name \"X-Partner-Token\". The `security` field applies this security to all API operations.",
    "endpoint": "Operation Object:\n\n```yaml\npaths:\n  /olp-partner/v4/shippingServices:\n    get:\n      operationId: getShippingServices\n      summary: Retrieve available shipping services\n      description: Returns a list of available shipping services provided by RoyalMail. \n      tags:\n      - Shipping Services\n      parameters:\n      - name: X-Partner-Token\n        in: header\n        required: true\n        schema:\n          type: string\n          example: \"0000-0000-0000-0000\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  shippingServices:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ShippingService'\n                  weightBands:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/WeightBand'\ncomponents:\n  schemas:\n    ShippingService:\n      type: object\n      properties:\n        brandType:\n          type: string\n        shippingServiceIdentifier:\n          type: string\n        shippingServiceDisplayName:\n          type: string\n        countryIso3Code:\n          type: string\n        minWeightInGrams:\n          type: integer\n        maxWeightInGrams:\n          type: integer\n        isEligibleForCollection:\n          type: boolean\n        isEligibleForCollectionSafePlace:\n          type: boolean\n        isEligibleForDeliverySafePlace:\n          type: boolean\n        isEligibleForLabellessCollections:\n          type: boolean\n        isEligibleForLabelsToGo:\n          type: boolean\n        packageFormats:\n          type: array\n          items:\n            $ref: '#/components/schemas/PackageFormat'\n        enhancements:\n          type: array\n          items:\n            type: string\n        serviceLevel:\n          type: string\n        dropOffLocations:\n          $ref: '#/components/schemas/DropOffLocation'\n        standardCollectionPrice:\n          type: number\n    WeightBand:\n      type: object\n      properties:\n        packageFormat:\n          type: string\n        weightBands:\n          type: array\n          items:\n            $ref: '#/components/schemas/Weight'\n```\n\nPlease note that this is just a part of the OpenAPI document. In a complete document, there should also be definitions for the `PackageFormat`, `DropOffLocation` and `Weight` schemas under `components/schemas`. And the endpoint should be defined under `paths`."
}