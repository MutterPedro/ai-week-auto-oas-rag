# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .get_shipping_services_response_shipping_services_item import GetShippingServicesResponseShippingServicesItem
from .get_shipping_services_response_weight_bands_item import GetShippingServicesResponseWeightBandsItem


class GetShippingServicesResponse(UniversalBaseModel):
    shipping_services: typing_extensions.Annotated[
        typing.Optional[typing.List[GetShippingServicesResponseShippingServicesItem]],
        FieldMetadata(alias="shippingServices"),
    ] = None
    weight_bands: typing_extensions.Annotated[
        typing.Optional[typing.List[GetShippingServicesResponseWeightBandsItem]], FieldMetadata(alias="weightBands")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
