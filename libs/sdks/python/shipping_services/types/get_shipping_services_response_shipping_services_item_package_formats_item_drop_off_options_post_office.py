# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .get_shipping_services_response_shipping_services_item_package_formats_item_drop_off_options_post_office_supplement_charges_item import (
    GetShippingServicesResponseShippingServicesItemPackageFormatsItemDropOffOptionsPostOfficeSupplementChargesItem,
)


class GetShippingServicesResponseShippingServicesItemPackageFormatsItemDropOffOptionsPostOffice(UniversalBaseModel):
    supplement_charges: typing_extensions.Annotated[
        typing.List[
            GetShippingServicesResponseShippingServicesItemPackageFormatsItemDropOffOptionsPostOfficeSupplementChargesItem
        ],
        FieldMetadata(alias="supplementCharges"),
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
