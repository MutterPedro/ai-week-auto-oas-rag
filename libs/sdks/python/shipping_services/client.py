# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from .raw_client import AsyncRawShippingServicesClient, RawShippingServicesClient
from .types.get_shipping_services_response import GetShippingServicesResponse


class ShippingServicesClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawShippingServicesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawShippingServicesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawShippingServicesClient
        """
        return self._raw_client

    def get_shipping_services(
        self, *, country: str, weight: str, request_options: typing.Optional[RequestOptions] = None
    ) -> GetShippingServicesResponse:
        """
        Retrieves the list of available shipping services.

        Parameters
        ----------
        country : str

        weight : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GetShippingServicesResponse
            Successful response

        Examples
        --------
        from mutterpedro import MutterpedroApi

        client = MutterpedroApi(
            partner_token="YOUR_PARTNER_TOKEN",
            api_key="YOUR_API_KEY",
        )
        client.shipping_services.get_shipping_services(
            country="GBR",
            weight="1000",
        )
        """
        _response = self._raw_client.get_shipping_services(
            country=country, weight=weight, request_options=request_options
        )
        return _response.data


class AsyncShippingServicesClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawShippingServicesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawShippingServicesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawShippingServicesClient
        """
        return self._raw_client

    async def get_shipping_services(
        self, *, country: str, weight: str, request_options: typing.Optional[RequestOptions] = None
    ) -> GetShippingServicesResponse:
        """
        Retrieves the list of available shipping services.

        Parameters
        ----------
        country : str

        weight : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GetShippingServicesResponse
            Successful response

        Examples
        --------
        import asyncio

        from mutterpedro import AsyncMutterpedroApi

        client = AsyncMutterpedroApi(
            partner_token="YOUR_PARTNER_TOKEN",
            api_key="YOUR_API_KEY",
        )


        async def main() -> None:
            await client.shipping_services.get_shipping_services(
                country="GBR",
                weight="1000",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_shipping_services(
            country=country, weight=weight, request_options=request_options
        )
        return _response.data
